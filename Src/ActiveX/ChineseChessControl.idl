// ChineseChessControl.idl: ActiveX 控件项目的类型库源。

// 此文件将由 MIDL 编译器工具处理以
// 生成类型库(ChineseChessControl.tlb)，该类型库将成为
// ChineseChessControl.ocx。

#include <olectl.h>
#include <idispids.h>

[ uuid(340162b7-44f0-440b-9ad9-94843a2865d0), version(1.0),
  helpfile("中国象棋控件.hlp"),
  helpstring("中国象棋控件"),  /*显示在引用列表框中*/
  control ]
library ChineseChessControlLib
{
	importlib(STDOLE_TLB);
	importlib(STDTYPE_TLB);

	//棋盘布局:详见《象棋竞赛规则(2011)》第一章 第1条
	typedef enum  _ENUM_BoardLayout {
		NoQi = 0,
		OnlyTopBlack = 1,
		OnlyBottomRed = 2,
		SwapRedBetweenBlack = 4,
		OnlyTopRed = OnlyTopBlack | SwapRedBetweenBlack,
		OnlyBottomBlack = OnlyBottomRed | SwapRedBetweenBlack,
		TopBlackAndBottomRed = OnlyTopBlack | OnlyBottomRed,
		TopRedAndBottomBlack = TopBlackAndBottomRed | SwapRedBetweenBlack
	} ENUM_BoardLayout;

	//  CChineseChessControlCtrl 的主调度接口
	[ 
		uuid(c66fbdae-fb51-4fb8-b6bc-cd2cbe461bb7),
		helpstring("中国象棋控件 - 分发接口")
	]
	dispinterface _DChineseChessControl
	{
		properties:
			[id(1), helpstring("棋盘颜色")] OLE_COLOR QiPangColor;
			[id(2), helpstring("棋盘提示框颜色")] OLE_COLOR TiShiBoxColor;
			[id(3), helpstring("棋盘布局")] ENUM_BoardLayout BoardLayout;
			
		methods:
			[id(DISPID_ABOUTBOX)] void AboutBox();
			[id(6), helpstring("走棋")] VARIANT_BOOL GoChess(SHORT i, SHORT j);
			[id(7), helpstring("保存棋局")] VARIANT_BOOL SaveChessGame(BSTR szFile);
			[id(8), helpstring("加载棋局")] VARIANT_BOOL LoadChessGame(BSTR szFile);
			[id(9), helpstring("下一步")] VARIANT_BOOL NextStep();
			[id(10), helpstring("上一步")] VARIANT_BOOL PreviouStep();
	};

	//  CChineseChessControlCtrl 的事件调度接口

	[ 
		uuid(6757238f-9836-4b8a-9c13-0acc7d6607b5),
		helpstring("中国象棋控件 - 事件接口")
	]
	dispinterface _DChineseChessControlEvents
	{
		properties:
			//  事件接口没有任何属性

		methods:
	};

	//  CChineseChessControlCtrl 的类信息
	[
		uuid(23ac49d1-f4fe-4ab0-b5a3-bb3cb22dfed0),
		helpstring("中国象棋控件")
	]
	coclass ChineseChessControl
	{
		[default] dispinterface _DChineseChessControl;
		[default, source] dispinterface _DChineseChessControlEvents;
	};

};
